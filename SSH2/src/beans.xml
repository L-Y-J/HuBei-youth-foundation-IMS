<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <context:annotation-config/>

    <!-- 引入properties文件 -->
    <context:property-placeholder location="classpath*:/appConfig.properties" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="500"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="2"/>
        <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>bean/User.hbm.xml</value>
                <value>bean/Power.hbm.xml</value>
                <value>bean/Role.hbm.xml</value>
                <value>bean/RoleType.hbm.xml</value>
                <value>bean/UserFile.hbm.xml</value>
                <value>bean/FileFoder.hbm.xml</value>
                <value>bean/Department.hbm.xml</value>
                <value>bean/Job.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.OracleDialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=false
                hibernate.format_sql=false
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.use_query_cache=false
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--使用基于注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--启用AspectJ对Annotation的支持-->
    <aop:aspectj-autoproxy/>
    <!--<bean id="AddCheck" class="aop.spring.AddCheck" />-->
    <bean id="AddCheck" class="aop.spring.AddCheck"/>
    <bean id="SqlCheck" class="aop.spring.sqlcheck"/>
    <bean id="UpdateCheck" class="aop.spring.UpdateCheck"/>
    <bean id="DeleteCheck" class="aop.spring.DeleteCheck"/>
    <bean id="UserService" class="serviceimpl.UserServiceBean"/>
    <bean id="PowerService" class="serviceimpl.PowerServiceBean" />
    <bean id="RoleService" class="serviceimpl.RoleServiceBean" />
    <bean id="RoleTypeService" class="serviceimpl.RoleTypeServiceBean" />
    <bean id="FileFoderService" class="serviceimpl.FileFoderServiceBean" />
    <bean id="UserFileService" class="serviceimpl.UserFileServiceBean" />
    <bean id="DepartmentService" class="serviceimpl.DepartmentServiceBean" />
    <bean id="JobService" class="serviceimpl.JobServiceBean" />

</beans>